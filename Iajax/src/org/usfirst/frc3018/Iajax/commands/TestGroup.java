// RobotBuilder Version: 1.5
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc3018.Iajax.commands;
import edu.wpi.first.wpilibj.command.CommandGroup;
import edu.wpi.first.wpilibj.command.WaitCommand;

/**
 *
 */
public class TestGroup extends CommandGroup {
    
    public  TestGroup() {
        // Add Commands here:
        // e.g. addSequential(new Command1());
        //      addSequential(new Command2());
        // these will run in order.

        // To run multiple commands at the same time,
        // use addParallel()
        // e.g. addParallel(new Command1());
        //      addSequential(new Command2());
        // Command1 and Command2 will run in parallel.

        // A command group will require all of the subsystems that each member
        // would require.
        // e.g. if Command1 requires chassis, and Command2 requires arm,
        // a CommandGroup containing them would require both the chassis and the
        // arm.
    	/*addSequential(new DriveForTime(0.3, 0.0, 0.0, true, 1.0));
    	addSequential(new DriveForTime(0.3, -90.0, -0.5, true, 1.0));
    	addSequential(new DriveForTime(0.3, 180.0, 0.5, true, 1.0));
    	addSequential(new DriveForTime(0.3, 90.0, 0.0, true, 1.0));
    	addSequential(new DriveForTime(0.0, 0.0, 0.5, false, 3.0));
    	addSequential(new PIDRotateToAngle(10));
    	addSequential(new WaitCommand(1.0));
    	addSequential(new PIDRotateToAngle(20));
    	addSequential(new WaitCommand(1.0));
    	addSequential(new PIDRotateToAngle(30));
    	addSequential(new WaitCommand(1.0));
    	addSequential(new PIDRotateToAngle(40));
    	addSequential(new WaitCommand(1.0));
    	addSequential(new PIDRotateToAngle(50));
    	addSequential(new WaitCommand(1.0));
    	addSequential(new PIDRotateToAngle(60));
    	addSequential(new WaitCommand(1.0));
    	addSequential(new PIDRotateToAngle(70));
    	addSequential(new WaitCommand(1.0));
    	addSequential(new PIDRotateToAngle(80));
    	addSequential(new WaitCommand(1.0));
    	addSequential(new PIDRotateToAngle(90));
    	addSequential(new WaitCommand(1.0));
    	addSequential(new PIDRotateToAngle(100));
    	addSequential(new WaitCommand(1.0));
    	addSequential(new PIDRotateToAngle(110));
    	addSequential(new WaitCommand(1.0));
    	addSequential(new PIDRotateToAngle(120));
    	addSequential(new WaitCommand(1.0));
    	addSequential(new PIDRotateToAngle(130));
    	addSequential(new WaitCommand(1.0));
    	addSequential(new PIDRotateToAngle(140));
    	addSequential(new WaitCommand(1.0));
    	addSequential(new PIDRotateToAngle(150));
    	addSequential(new WaitCommand(1.0));
    	addSequential(new PIDRotateToAngle(160));
    	addSequential(new WaitCommand(1.0));
    	addSequential(new PIDRotateToAngle(170));
    	addSequential(new WaitCommand(1.0));
    	addSequential(new PIDRotateToAngle(180));
    	addSequential(new WaitCommand(1.0));*/
    	addSequential(new DriveForTime(0.6, 0.0, 0.0, false, 1.0));
    	addSequential(new PIDRotateToAngle(-90));
    	addSequential(new DriveForTime(0.6, 0.0, 0.0, false, 1.0));
    	addSequential(new PIDRotateToAngle(-90));
    	addSequential(new DriveForTime(0.6, 0.0, 0.0, false, 1.0));
    	addSequential(new PIDRotateToAngle(-90));
    	addSequential(new DriveForTime(0.6, 0.0, 0.0, false, 1.0));
    	addSequential(new PIDRotateToAngle(-90));
    }
}