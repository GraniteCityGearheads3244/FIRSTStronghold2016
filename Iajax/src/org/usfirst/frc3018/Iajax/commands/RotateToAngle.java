// RobotBuilder Version: 1.5
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc3018.Iajax.commands;

import edu.wpi.first.wpilibj.command.Command;

import org.usfirst.frc3018.Iajax.Robot;
import org.usfirst.frc3018.Iajax.RobotMap;

/**
 *
 */
public class  RotateToAngle extends Command {

    private double m_angle;
	private double m_speed;
	private double m_targetAngle;
	private boolean m_useGyro;

	public RotateToAngle(double speed, double angle, boolean useGyro) {
        // Use requires() here to declare subsystem dependencies
        // eg. requires(chassis);

        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
        requires(Robot.driveTrain);

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
        m_speed = Math.abs(speed);
        m_angle = angle;
        m_useGyro = useGyro;
    }
    
    public RotateToAngle() {
    	this(0.25, -90.0, false);
    	
    }

    // Called just before this Command runs the first time
    protected void initialize() {
    	m_targetAngle = RobotMap.driveTrainGyro1.getAngle() + m_angle;
    }

    // Called repeatedly when this Command is scheduled to run
    protected void execute() {
    	double currentAngle = RobotMap.driveTrainGyro1.getAngle();
    	double rotation = m_speed;
    	if(currentAngle - m_targetAngle > 0.0){
    		rotation = -rotation;
    	}
    	
    	double gyroAngle = 0.0;
    	if(m_useGyro){
    		gyroAngle = RobotMap.driveTrainGyro1.getAngle();
    		
    	}
    	Robot.driveTrain.mecanumDrive(0.0, 0.0, rotation, gyroAngle);
    }

    // Make this return true when this Command no longer needs to run execute()
    protected boolean isFinished() {
    	double currentAngle = RobotMap.driveTrainGyro1.getAngle();
    	boolean isDone = Math.abs(currentAngle - m_targetAngle) < 1.0; 
        return isDone;
    }

    // Called once after isFinished returns true
    protected void end() {
    }

    // Called when another command which requires one or more of the same
    // subsystems is scheduled to run
    protected void interrupted() {
    }
}
