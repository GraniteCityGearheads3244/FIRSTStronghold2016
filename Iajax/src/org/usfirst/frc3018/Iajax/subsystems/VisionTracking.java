// RobotBuilder Version: 1.5
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc3018.Iajax.subsystems;

import org.usfirst.frc3018.Iajax.RobotMap;
import org.usfirst.frc3018.Iajax.commands.*;

import edu.wpi.first.wpilibj.command.Subsystem;
import edu.wpi.first.wpilibj.networktables.NetworkTable;
import edu.wpi.first.wpilibj.networktables2.type.NumberArray;
import edu.wpi.first.wpilibj.smartdashboard.SmartDashboard;


/**
 *
 */
public class VisionTracking extends Subsystem {
	NetworkTable table;
	NumberArray values = new NumberArray();
	final double PIXELS_WIDE = 320;
	final double ANGLE_OF_VIEW = 47;
	
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    public VisionTracking(){
        table = NetworkTable.getTable("");
        
    }
    
    // Put methods for c ontrolling this subsystem
    // here. Call these from Commands.

    public void initDefaultCommand() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND
	
        // Set the default command for a subsystem here.
        //setDefaultCommand(new MySpecialCommand());
    }
    
    public double getCenterOfToteX(){
    	return table.getNumber("COG_X");
    }
    
    public double getBottomLeftOfToteX(){
    	return table.getNumber("BOTTOM_LEFT_X");
    }
    
    public double getBottomLeftOfToteY(){
    	return table.getNumber("BOTTOM_LEFT_Y");
    }
    
    public double getTopRightOfToteX(){
    	return table.getNumber("TOP_RIGHT_X");
    }
    
    public double getTopRightOfToteY(){
    	return table.getNumber("TOP_RIGHT_Y");
    }
    
    public double getBlobCount(){
    	return table.getNumber("BLOB_COUNT");
    }
    
    public void test(){
    	/*
    	table.retrieveValue("COG_BOUNDING_COORDINATES", values);
    	for(int i = 0; i < values.size(); i++){    	
    		System.out.println("bounds "+i +" is " + values.get(i));   	
    	}*/
    	System.out.println("Blob count " + table.getNumber("BLOB_COUNT"));
    }
    
    public double getAngleToTote(){
    	double COG_X = getCenterOfToteX();
    	return (ANGLE_OF_VIEW * (COG_X - PIXELS_WIDE/2))/PIXELS_WIDE;
    }
	public void updateStatus() {
		double blobcount=getBlobCount();
		 SmartDashboard.putNumber("Blob Count", blobcount);
		if(blobcount!=0.0) {        
            SmartDashboard.putNumber("Camera X" , getTopRightOfToteX());
            SmartDashboard.putNumber("Camera Y" , getTopRightOfToteY());
		}
	}
}
