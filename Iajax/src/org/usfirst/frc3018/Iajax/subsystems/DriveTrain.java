// RobotBuilder Version: 1.5
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc3018.Iajax.subsystems;

import org.usfirst.frc3018.Iajax.RobotMap;
import org.usfirst.frc3018.Iajax.commands.*;

import edu.wpi.first.wpilibj.*;
import edu.wpi.first.wpilibj.command.Subsystem;
import edu.wpi.first.wpilibj.smartdashboard.SmartDashboard;


/**
 *
 */
public class DriveTrain extends Subsystem {
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    AnalogGyro gyro1 = RobotMap.driveTrainGyro1;
    SpeedController lR = RobotMap.driveTrainLR;
    SpeedController lF = RobotMap.driveTrainLF;
    SpeedController rF = RobotMap.driveTrainRF;
    SpeedController rR = RobotMap.driveTrainRR;
    Encoder lREncoder = RobotMap.driveTrainLREncoder;
    Encoder lFEncoder = RobotMap.driveTrainLFEncoder;
    Encoder rFEncoder = RobotMap.driveTrainRFEncoder;
    Encoder rREncoder = RobotMap.driveTrainRREncoder;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS

    NordicSpeedController nLF = RobotMap.nordicLF;
    NordicSpeedController nRF = RobotMap.nordicRF;
    NordicSpeedController nLR = RobotMap.nordicLR;
    NordicSpeedController nRR = RobotMap.nordicRR;
    RobotDrive robotDrive41 = RobotMap.driveTrainRobotDrive41;
    /*Encoder lFEncoder = RobotMap.driveTrainLFEncoder;
    Encoder rFEncoder = RobotMap.driveTrainRFEncoder;
    Encoder rREncoder = RobotMap.driveTrainRREncoder;
    Encoder lREncoder = RobotMap.driveTrainLREncoder;*/



    
    // Put methods for controlling this subsystem
    // here. Call these from Commands.

    public void initDefaultCommand() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND
        setDefaultCommand(new DriveWithJoysticks());

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND
	
        // Set the default command for a subsystem here.
        //setDefaultCommand(new MySpecialCommand());
    }
    
    public void mecanumDrive(double x, double y, double rotation, double gyroAngle){
    	robotDrive41.mecanumDrive_Cartesian(x, y, rotation, gyroAngle);
    }
    
    public void updateStatus(){
        
        nLF.updateStatus();
        nRF.updateStatus();
        nRR.updateStatus();
        nLR.updateStatus();
        SmartDashboard.putNumber("Gyro", gyro1.getAngle());
        
    }

	public void zeroHeading(boolean fullReset) {
		if(fullReset){
			gyro1.initGyro();
		} else {
			gyro1.reset();
		}
	}

	public void resetPIDs(double pvalue, double ivalue, double dvalue, double setpoint) {
		nLF.resetPID(pvalue, ivalue, dvalue, setpoint);
		nLR.resetPID(pvalue, ivalue, dvalue, setpoint);
		nRF.resetPID(pvalue, ivalue, dvalue, setpoint);
		nRR.resetPID(pvalue, ivalue, dvalue, setpoint);
	}

	public void disablePIDs() {
		nLF.disablePIDs();
        nRF.disablePIDs();
        nRR.disablePIDs();
        nLR.disablePIDs();	
	}
 
}
