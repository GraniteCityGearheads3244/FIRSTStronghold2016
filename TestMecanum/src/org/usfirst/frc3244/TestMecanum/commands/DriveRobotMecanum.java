// RobotBuilder Version: 1.5
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc3244.TestMecanum.commands;

import edu.wpi.first.wpilibj.Timer;
import edu.wpi.first.wpilibj.command.Command;
import edu.wpi.first.wpilibj.smartdashboard.SmartDashboard;

import org.usfirst.frc3244.TestMecanum.Robot;
import org.usfirst.frc3244.TestMecanum.RobotMap;

/**
 *
 */
public class  DriveRobotMecanum extends Command {
	double x_target = 0;
	double y_target = 0;
	double r_target = 0;
	double lastScan = 0;
	double thisScan = 0;
	double x_command = 0;
	double y_command = 0;
	double r_command = 0;
	double l_rate = .1;  //linear rate of change
	double p_rate = .1;  //percent rate of change
	double max = .75;
	double min = .75;
	double deadband = .2;	
	Timer t = new Timer();

    public DriveRobotMecanum() {
        // Use requires() here to declare subsystem dependencies
        // eg. requires(chassis);

        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
        requires(Robot.driveTrain);

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
    }

    // Called just before this Command runs the first time
    protected void initialize() {
    	
    }

    // Called repeatedly when this Command is scheduled to run
    protected void execute() {
    	
    	//Get JoyStick values
    	x_target = Robot.oi.xbox.getRawAxis(0);
    	y_target = Robot.oi.xbox.getRawAxis(1);
    	r_target = Robot.oi.xbox.getRawAxis(4);
    	//Get Gyro
    	double gyro = Robot.driveTrain.getGyro();
    	
    	//clamp values between -1 and 1 in case somehow it got outside these values
    	x_command = Robot.driveTrain.clampCommand(x_target);
    	y_command = Robot.driveTrain.clampCommand(y_target);
    	r_command = Robot.driveTrain.clampCommand(r_target);
    	
    	//Send Commands to Drive Train
    	Robot.driveTrain.driveMecanum(x_command,y_command,r_command,gyro);
    	
    	
    	
    } 

    // Make this return true when this Command no longer needs to run execute()
    protected boolean isFinished() {
    	//Never Finished 
        return false;
    }

    // Called once after isFinished returns true
    protected void end() {
    }

    // Called when another command which requires one or more of the same
    // subsystems is scheduled to run
    protected void interrupted() {
    }
    
}
