// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc3244.SirAntsABot2;

import org.usfirst.frc3244.SirAntsABot2.RobotMap.RobotSetting;
import org.usfirst.frc3244.SirAntsABot2.subsystems.NordicSpeedController;
import edu.wpi.first.wpilibj.RobotDrive;
// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS
import edu.wpi.first.wpilibj.AnalogGyro;
import edu.wpi.first.wpilibj.CounterBase.EncodingType;
import edu.wpi.first.wpilibj.Encoder;
import edu.wpi.first.wpilibj.PIDSourceType;
import edu.wpi.first.wpilibj.RobotDrive;
import edu.wpi.first.wpilibj.SpeedController;
import edu.wpi.first.wpilibj.Talon;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS
import edu.wpi.first.wpilibj.livewindow.LiveWindow;

/**
 * The RobotMap is a mapping from the ports sensors and actuators are wired into
 * to a variable name. This provides flexibility changing wiring, makes checking
 * the wiring easier and significantly reduces the number of magic numbers
 * floating around.
 */
public class RobotMap {
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    public static AnalogGyro driveTrainRobot_Gyro;
    public static Encoder driveTrainEncoder_Left_Front;
    public static Encoder driveTrainEncoder_Left_Rear;
    public static Encoder driveTrainEncoder_Right_Rear;
    public static Encoder driveTrainEncoder_Right_Front;
    public static SpeedController driveTrainMotor_Left_Front;
    public static SpeedController driveTrainMotor_Left_Rear;
    public static SpeedController driveTrainMotor_Right_Rear;
    public static SpeedController driveTrainMotor_Right_Front;
    public static RobotDrive driveTrainRobotDrive41;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    
    public static void init() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
        driveTrainRobot_Gyro = new AnalogGyro(0);
        LiveWindow.addSensor("DriveTrain", "Robot_Gyro", driveTrainRobot_Gyro);
        driveTrainRobot_Gyro.setSensitivity(0.007);
        driveTrainEncoder_Left_Front = new Encoder(0, 1, false, EncodingType.k4X);
        LiveWindow.addSensor("DriveTrain", "Encoder_Left_Front", driveTrainEncoder_Left_Front);
        driveTrainEncoder_Left_Front.setDistancePerPulse(1.0);
        driveTrainEncoder_Left_Front.setPIDSourceType(PIDSourceType.kRate);
        driveTrainEncoder_Left_Rear = new Encoder(2, 3, false, EncodingType.k4X);
        LiveWindow.addSensor("DriveTrain", "Encoder_Left_Rear", driveTrainEncoder_Left_Rear);
        driveTrainEncoder_Left_Rear.setDistancePerPulse(1.0);
        driveTrainEncoder_Left_Rear.setPIDSourceType(PIDSourceType.kRate);
        driveTrainEncoder_Right_Rear = new Encoder(6, 7, false, EncodingType.k4X);
        LiveWindow.addSensor("DriveTrain", "Encoder_Right_Rear", driveTrainEncoder_Right_Rear);
        driveTrainEncoder_Right_Rear.setDistancePerPulse(1.0);
        driveTrainEncoder_Right_Rear.setPIDSourceType(PIDSourceType.kRate);
        driveTrainEncoder_Right_Front = new Encoder(4, 5, false, EncodingType.k4X);
        LiveWindow.addSensor("DriveTrain", "Encoder_Right_Front", driveTrainEncoder_Right_Front);
        driveTrainEncoder_Right_Front.setDistancePerPulse(1.0);
        driveTrainEncoder_Right_Front.setPIDSourceType(PIDSourceType.kRate);
        driveTrainMotor_Left_Front = new Talon(0);
        LiveWindow.addActuator("DriveTrain", "Motor_Left_Front", (Talon) driveTrainMotor_Left_Front);
        
        driveTrainMotor_Left_Rear = new Talon(1);
        LiveWindow.addActuator("DriveTrain", "Motor_Left_Rear", (Talon) driveTrainMotor_Left_Rear);
        
        driveTrainMotor_Right_Rear = new Talon(3);
        LiveWindow.addActuator("DriveTrain", "Motor_Right_Rear", (Talon) driveTrainMotor_Right_Rear);
        
        driveTrainMotor_Right_Front = new Talon(2);
        LiveWindow.addActuator("DriveTrain", "Motor_Right_Front", (Talon) driveTrainMotor_Right_Front);
        
        driveTrainRobotDrive41 = new RobotDrive(driveTrainMotor_Left_Front, driveTrainMotor_Left_Rear,
              driveTrainMotor_Right_Front, driveTrainMotor_Right_Rear);
        
        driveTrainRobotDrive41.setSafetyEnabled(true);
        driveTrainRobotDrive41.setExpiration(0.1);
        driveTrainRobotDrive41.setSensitivity(0.5);
        driveTrainRobotDrive41.setMaxOutput(1.0);

        driveTrainRobotDrive41.setInvertedMotor(RobotDrive.MotorType.kFrontRight, true);
        driveTrainRobotDrive41.setInvertedMotor(RobotDrive.MotorType.kRearRight, true);

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
        

    }
}
