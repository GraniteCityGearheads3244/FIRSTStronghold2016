// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc3244.Stronghold_Advanced.commands;

import edu.wpi.first.wpilibj.command.Command;
import org.usfirst.frc3244.Stronghold_Advanced.Robot;

/**
 *
 */
public class SeaLegs_Jog_Forward extends Command {
	
	double currentLeftEncoder;
	double currentRightEncoder;
	double kp = .5;
	double error = 0;
	double leftValue = 0;
	double rightValue = 0;

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=VARIABLE_DECLARATIONS
 
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=VARIABLE_DECLARATIONS

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTOR
    public SeaLegs_Jog_Forward() {

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTOR
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=VARIABLE_SETTING

        // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=VARIABLE_SETTING
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
        requires(Robot.seaLegs);

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
    }

    // Called just before this Command runs the first time
    protected void initialize() {
    	Robot.seaLegs.my_LeftEncoder_Reset();
    	Robot.seaLegs.my_RightEncoder_Reset();
    	leftValue = .75; 
    	rightValue = leftValue-.1; 
    }

    // Called repeatedly when this Command is scheduled to run
    protected void execute() {
    	currentLeftEncoder = Robot.seaLegs.my_GetLeftEncoder();
    	currentRightEncoder = Robot.seaLegs.my_GetRightEncoder();
    	
    	if (leftValue > 1){
    		leftValue = 1;
    	}
    	if (rightValue < -1){
    		rightValue = -1;
    	}
    	
    	if (rightValue > 1){
    		rightValue = 1;
    	}
    	if (rightValue < -1){
    		rightValue = -1;
    	}
    	
    	error = currentLeftEncoder-currentRightEncoder;
    	rightValue = rightValue + (error * kp);
    	
    	Robot.seaLegs.my_Walk_Sealegs_Timed(leftValue, rightValue);
    }

    // Make this return true when this Command no longer needs to run execute()
    protected boolean isFinished() {
        return false;
    }

    // Called once after isFinished returns true
    protected void end() {
    	Robot.seaLegs.my_Walk_Sealegs_Timed(0, 0);
    }

    // Called when another command which requires one or more of the same
    // subsystems is scheduled to run
    protected void interrupted() {
    	end();
    }
}
